services:
  db:
    image: postgres:17
    # env_file: .env
    environment:
      - POSTGRES_HOST=${DB_HOST}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
    volumes:
      - db_data:/var/lib/postgresql/data
    restart: unless-stopped
    container_name: vikunja-db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h localhost -U $$POSTGRES_USER"]
      interval: 2s
      start_period: 30s

  vikunja:
    image: vikunja/vikunja
    ports:
      - ${PORT}:3456
    # env_file: .env
    environment:
      VIKUNJA_DATABASE_HOST: ${DB_HOST}
      VIKUNJA_DATABASE_PASSWORD: ${DB_PASS}
      VIKUNJA_DATABASE_TYPE: postgres
      VIKUNJA_DATABASE_USER: ${DB_USER}
      VIKUNJA_DATABASE_DATABASE: ${DB_NAME}
      VIKUNJA_SERVICE_JWTSECRET: ${VIKUNJA_SERVICE_JWTSECRET}
      VIKUNJA_SERVICE_PUBLICURL: ${VIKUNJA_SERVICE_PUBLICURL}
    restart: unless-stopped
    container_name: vikunja
    volumes:
      - ./files:/app/vikunja/files
      - ./config.yml:/etc/vikunja/config.yml
    depends_on:
      db:
        condition: service_healthy

  db-backup:
    container_name: vikunja-db-backup
    image: ghcr.io/tiredofit/docker-db-backup
    links:
     - db
    volumes:
      - /home/ezcafe/backups/vikunja:/backup:rwx
      - /home/ezcafe/raspberry/scripts/backup-pre-script.sh:/assets/scripts/pre/script.sh
      - /home/ezcafe/raspberry/scripts/backup-post-script.sh:/assets/scripts/post/script.sh
    environment:
      # - DEBUG_MODE=TRUE
      - DB01_TYPE=pgsql
      - DB01_HOST=${DB_HOST}
      - DB01_NAME=${DB_NAME}
      - DEFAULT_AUTH=${DB_NAME}
      - DB01_USER=${DB_USER}
      - DB01_PASS=${DB_PASS}
      # - DEFAULT_BACKUP_BEGIN=0000      # backup starts immediately
      - DEFAULT_BACKUP_INTERVAL=1440       # backup every x minute - 1440 = 1 day
      - DEFAULT_CLEANUP_TIME=11520   # clean backups they are older than x minute - 11520 = 8 days
      - DEFAULT_CHECKSUM=SHA1
      - DEFAULT_COMPRESSION=GZ
      - DB01_SPLIT_DB=FALSE
      - CONTAINER_ENABLE_MONITORING=FALSE
      - TIMEZONE=${TZ}
    restart: unless-stopped
    networks:
      - proxy
    depends_on:
      db:
        condition: service_healthy

volumes:
  db_data:

networks:
  proxy: